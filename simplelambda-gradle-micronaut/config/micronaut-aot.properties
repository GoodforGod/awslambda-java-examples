# Caches environment property values: environment properties will be deemed immutable after application startup.
cached.environment.enabled=false
# Deduces the environment at build time instead of runtime
deduce.environment.enabled=false
# Precomputes Micronaut configuration property keys from the current environment variables
precompute.environment.properties.enabled=false
#
#
# Checks of existence of some types at build time instead of runtime
known.missing.types.enabled=true
# A list of types that the AOT analyzer needs to check for existence (comma separated)
known.missing.types.list=javax.inject.Inject
#
#
# Scans for service types ahead-of-time, avoiding classpath scanning at startup
serviceloading.jit.enabled=true
# The list of service types to be scanned (comma separated)
service.types=
# A list of implementation types which shouldn't be included in the final application (comma separated)
serviceloading.rejected.impls=
# A list of implementation types to include even if they don't match bean requirements (comma separated)
serviceloading.force.include.impls=
# The list of environment names that this application can possibly use at runtime.
possible.environments=dev,prod,aws
#
#
# Precomputes property sources at build time
sealed.property.source.enabled=true
# Scans reactive types at build time instead of runtime
scan.reactive.types.enabled=true
# Replaces logback.xml with a pure Java configuration (NOT YET IMPLEMENTED!)
logback.xml.to.java.enabled=false
# Converts YAML configuration files to Java configuration
yaml.to.java.config.enabled=true
